name: CI

on: 
  push:

permissions:
  contents: read

env:
  DENO_DIR: my_cache_directory

jobs:
  deno-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Deno dependencies 
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: denoland/setup-deno@v1.1.1
        with:
          deno-version: v1.x

      - name: Cache dependencies
        run: |
          deno cache --lock deno.lock dev_deps.ts deps.ts

      - name: Run fmt
        run: |
          deno fmt --check

      - name: Run lint
        run: |
          deno lint

      - name: Check mod.ts
        run: |
          deno check mod.ts

  deno-unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Deno dependencies 
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: denoland/setup-deno@v1.1.1
        with:
          deno-version: v1.x

      - name: Cache dependencies
        run: |
          deno cache --lock deno.lock dev_deps.ts deps.ts

      - name: Run tests
        run: |
          deno task test:coverage > test_results.txt

      - name: Generate coverage file
        run: |
          deno coverage cov_profile --lcov --output=cov_profile.lcov

      - name: Display test results
        if: always()
        run: |
          cat test_results.txt
          echo "## Test result" >> $GITHUB_STEP_SUMMARY
          deno run --allow-read npm:ansi-to-html test_results.txt >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./cov_profile.lcov
          flags: unittests 

  deno-e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Deno dependencies 
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ runner.os }}-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: denoland/setup-deno@v1.1.1
        with:
          deno-version: v1.x

      - name: Cache dependencies
        run: |
          deno cache --lock deno.lock dev_deps.ts deps.ts

      - name: Run output file for default branch log
        run: |
          deno task cli --output-file --file ./src/__tests__/testdata/renovate-json-default-branch.log
          deno task cli --output-file --file ./src/__tests__/testdata/renovate-json-topic-branch.log

      - name: Check exists output file
        run: |
          ls ./dist/renovate-json-default-branch.json
          ls ./dist/renovate-json-topic-branch.json

      - name: Compare output files
        run: |
          diff -u ./dist/renovate-json-default-branch.json ./dist/renovate-json-topic-branch.json || true

      - uses: actions/upload-artifact@v3
        with:
          name: dist-logs
          path: |
            dist/renovate-json-*.json
